name: Maven Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build and Test
      id: build-test
      run: |
        echo "Building project..."
        set -o pipefail
        mvn -B clean install 2>&1 | tee build.log
        echo "‚úÖ All checks passed!"

    - name: Comment on PR - Success
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## ‚úÖ Build Successful!\n\nYour changes have passed all checks:\n- ‚úÖ Maven build completed\n- ‚úÖ All tests passed\n\nReady for review! üöÄ'
          })

    - name: Comment on PR - Failed
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v7
      with:
        script: |
          let errorDetails = '';
          try {
            const fs = require('fs');
            if (fs.existsSync('build.log')) {
              const logContent = fs.readFileSync('build.log', 'utf8');
              const lines = logContent.split('\n');
              
              // Get last 50 lines
              const lastLines = lines.slice(-50);
              
              // Filter for error lines (case insensitive)
              const errorLines = lastLines.filter(line => 
                line.toLowerCase().includes('[error]') ||
                line.toLowerCase().includes('error') ||
                line.toLowerCase().includes('exception') ||
                line.toLowerCase().includes('failed') ||
                line.toLowerCase().includes('failure')
              );
              
              // Use error lines if found, otherwise use last 50 lines
              const displayLines = errorLines.length > 0 ? errorLines : lastLines;
              
              errorDetails = '\n\n**Build output (last 50 lines):**\n```\n' + displayLines.join('\n') + '\n```';
              
              if (errorLines.length > 0) {
                errorDetails += '\n\n**Error summary:** Found ' + errorLines.length + ' error-related lines in the last 50 lines of output.';
              }
            }
          } catch (e) {
            errorDetails = '\n\n*Unable to capture build logs automatically. Please check the Actions tab for details.*';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## ‚ùå Build Failed:\n\n' + errorDetails
          })